{\rtf1\ansi\ansicpg1252\cocoartf1265\cocoasubrtf210
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 While at The Data Incubator, I would like to realize a project on the analysis of New York City Citibike data, with the aim of improving the so-called system balancing. \
\
One of the problems that citibike customers have to face is that they may want to pick up a bike from an empty station, or to drop off a bike to a full one. This yields a waste of time and customer dissatisfaction, since he/she has to seek for an alternate station to initiate or conclude his/her trip. \
\
This is also an issue for Citibike, which deals with it by manually moving bikes from heavy-loaded stations to empty ones using vans, especially at night. \
\
My broadest idea is to perform a real-time analysis of the balancing status of the Citibike network and to implement predictive strategies to forecast which stations are going to become too loaded or unloaded. Hence, I would like to identify what are the stations that can be used as candidate rebalancers, i.e., stations where bikes can be picked from or dropped to, in order to improve the system balancing. Further, I would like to realize a crowd-based balancing system, where Citibike customers volunteer to move bikes from one station to another to rebalance the system, for a little reward that will be credited on the customers\'92 accounts, towards either their next subscription renewal, or to collect vouchers to be spent at stores participating to the project. \
\
Real-time predictive analysis will be performed via data-driven, predictive modeling of the load-unload profiles of the stations. Several tools from nonlinear identification techniques can be used, such as black-box machine learning, nonlinear identification techniques, support vector machines. \
\
The crowd-based rebalancing strategy will be realized with nonlinear predictive control techniques, such as, for example, model predictive control. The problems that must be solved are multi-objective and multi-variable optimization problems (e.g. deciding if picking bikes from a close but not so heavily loaded station, or from a further but more crowded one), which are very often tackled through the use of heuristics, rather than through exact solvers. \
\
The preliminary work performed in the submitted material is based on the available Citibike trip data. I have considered the data from December 2014 and I cleaned them by eliminating the trips that lasted more than two hours. Then, I have constructed some variables describing the station activity versus time, that is, starting from the zero reference value at start time (the number of bikes present at the station at the initial time was not available), I have processed the trip data to obtain the relative number of bikes picked up or dropped of at the station, with a sampling time of 10 minutes. These activity variables, one per station, have been further processed in order to obtain rates of pick up or drop off in one-hour intervals. I have set an alarm whenever a station is loaded or unloaded by more than a third of its capacity in an hour. Those stations are considered to be at risk regarding the system balancing. Hence, I have used the available data to detect candidate stations for rebalancing, i.e., stations where bikes can be moved to or picked from to rebalance a station at risk. To this aim, I have computed the distance matrix between any pair of stations, and I have picked ten candidates among the closest station that have a traffic profile suitable to operate the rebalancing. \
\
The two figures provided illustrate the traffic at one station and the corrisponding alarm generated, and the candidate stations for rebalancing. \
\
This preliminary analysis should be refined in several aspects, the most important are: \
\
1) improving the computation of the distance matrix between pairs of stations. At present, I have performed this computation by using the Euclidean distance computed on the available geographic coordinates. Results should improved by using real distances, possibly taking into account the actual route to be covered. \
\
2) being able to obtain a real-time station load variable would help to improve the algorithm efficacy. As I have mentioned before, I have performed my analysis assigning the conventional zero quantity as the station occupancy at the initial time. This has allowed me to evaluate relative loads, but not absolute ones. This data can actually be available, if one plans to realize the project. Citibike, in fact, provides a JSON real-time feed of the stations\'92 statuses here {\field{\*\fldinst{HYPERLINK "http://www.citibikenyc.com/stations/json"}}{\fldrslt http://www.citibikenyc.com/stations/json}} . Thus, this feed should be read in real-time and the corresponding data used in the implementation of the project. \
\
3) thresholds and parameters for the data analysis have been set arbitrarily, and a more in-depth analysis should be conducted. For example, I have decided to monitor docking/undocking rates by considering a one-hour time window, but time windows with other extensions may be more efficient. Another important parameter is the threshold used to generate the alarm, which has been arbitrarily set to a third of the station capacity in one hour. The selection of this threshold should be improved by a thorough data analysis. Moreover, an adaptive threshold may be considered. For example, the threshold may change according to the time of the day, the neighborhood where the station is located, or the weather. \
\
}